{"version":3,"sources":["../src/marker.js"],"names":["MarkersCreator","array","stores","storesToCheck","writeFileSync","JSON","stringify","console","log","map","address","store","name","geocode","newStore","save","err","result","length","process","exit","terminateProcess","Promise","all","promiseFactory","p","catch","e","then","OK","data","filter","x","type","s","index","payload","pristine","fetching","resolve","reject","pushThePromise","promises","push"],"mappings":"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","file":"marker.js","sourcesContent":["/*eslint no-console: [\"error\", { allow: [\"warn\", \"error\", \"log\"] }] */\nimport fs from 'fs'\nimport geocoder from './geocoder'\nimport Location from './locations.model'\nimport { DIR_LOCATION } from './config'\n\nclass MarkersCreator {\n\tconstructor(array) {\n\t\tthis.stores = array,\n\t\tthis.storesToCheck = [...this.stores]\n\t}\n\n\tterminateProcess() {\n\t\tfs.writeFileSync(DIR_LOCATION + 'result2.txt', JSON.stringify(this.stores))\n\t\tconsole.log('*************************************')\n\t\tthis.stores.map(store => {\n\t\t\tlet {address, name, geocode} = store\n\t\t\tlet newStore = new Location({ address, name, geocode })\n\t\t\tconsole.log(newStore)\n\t\t\tconsole.log('New location saved')\n\t\t\t//console.log(newStore);\n\t\t\tnewStore.save((err, result) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tconsole.log(err)\n\t\t\t\t}\n\t\t\t\tconsole.log(result)\n\t\t\t})\n\t\t})\n\t\tconsole.log('storesChecked', this.stores.length)\n\t\tprocess.exit(0)\n\t}\n\n\tfetching(array) {\n\t\tif (array.length === 0) {\n\t\t\tthis.terminateProcess()\n\t\t}\n\t\tPromise.all(promiseFactory(array).map(p => p.catch(e => e)))\n\t\t\t.then(data => {\n\t\t\t\tconst OK = data.filter(x => x.type === 'OK')\n\t\t\t\tOK.map(x => {\n\t\t\t\t\tstores.filter(s => s.index === x.payload.index)[0].geocode = x.payload.data\n\t\t\t\t\tarray.filter(s => s.index === x.payload.index)[0].pristine = false\n\t\t\t\t})\n\t\t\t\tthis.fetching(array.filter(x => x.pristine))\n\n\t\t\t})\n\t}\n\tgeocode(address, index) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tgeocoder.geocode(address)\n\t\t\t\t.then((data) => {\n\t\t\t\t\tconsole.log('location acquired');\n\t\t\t\t\tresolve({ type: 'OK', payload: { data: data[0], index } })\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t\treject({ type: 'Error', payload: { data: null, index } })\n\t\t\t\t})\n\t\t})\n\t}\n\tpromiseFactory(array) {\n\t\tlet pushThePromise = (address, index) => {\n\t\t\tpromises.push(geocode(address, index))\n\t\t}\n\t\tlet promises = []\n\t\tif (array.length) {\n\t\t\tarray.map(store => {\n\t\t\t\t//setTimeout(pushThePromise, 250, [store.address, store.index])\n\t\t\t\tpromises.push(geocode(store.address, store.index))\n\t\t\t})\n\t\t\treturn promises\n\t\t}\n\t\treturn null\n\t}\n\n}\n\n"]}